name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      test_pypi:
        description: 'Publish to Test PyPI instead of PyPI'
        required: false
        type: boolean
        default: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up UV
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "**/pyproject.toml"
    
    - name: Set up Python
      run: uv python install '3.11'
    
    - name: Install dependencies
      run: |
        uv sync --dev
    
    - name: Build package
      run: |
        uv build
    
    - name: Check distribution
      run: |
        uv add --dev twine
        uv run twine check dist/*
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up UV
      uses: astral-sh/setup-uv@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Download artifacts
      uses: actions/download-artifact@v5
      with:
        name: dist
        path: dist/
    
    - name: Install from wheel
      run: |
        uv pip install dist/*.whl
        
    - name: Test import
      run: |
        uv run python -c "import music21_mcp; print(music21_mcp.__version__)"
        uv run python -c "from music21_mcp.services import MusicAnalysisService"
        
    - name: Test CLI
      run: |
        uv run music21-analysis --help || true
        uv run music21-mcp --help || true

  publish:
    needs: [build, test]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/music21-mcp-server/
    
    permissions:
      id-token: write  # For trusted publishing
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download artifacts
      uses: actions/download-artifact@v5
      with:
        name: dist
        path: dist/
    
    - name: Publish to Test PyPI
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.test_pypi == 'true'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        skip-existing: true
    
    - name: Publish to PyPI
      if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.test_pypi == 'false')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        skip-existing: true